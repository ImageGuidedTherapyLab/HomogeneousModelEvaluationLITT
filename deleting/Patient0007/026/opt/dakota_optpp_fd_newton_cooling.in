
# DAKOTA INPUT FILE - dakota_opt.in
strategy,
        single_method
          graphics,tabular_graphics_data

method,
        optpp_fd_newton
        output verbose
          max_iterations = 1000
          max_function_evaluations = 2000
#         solution_accuracy = 1e-4
#         initial_delta = 0.5
#         threshold_delta = 1e-4
#         exploratory_moves basic_pattern
#         contraction_factor = 0.75

model,
        single

variables,
        continuous_design = 4
          initial_point            0.0        21.0           0.5           6.0   
          lower_bounds             0.0        20.0           0.4           3.0   
          upper_bounds             1.e4       40.0           0.7           9.0   
          descriptors      'robin_coeff' 'probe_init' 'k_0_healthy' 'w_0_healthy'
        continuous_state =  9
          initial_state        8.e3           0.9            5.e1                 0.095022          0.074112           0.000000         0.000000 -90.000000 21.000000 
          #lower_bounds        1.e3           0.7            5.e1                 0.094022          0.073112           -0.001000         -5.000000 -95.000000 16.000000 
          #upper_bounds        5.e4           1.0            6.e2                 0.096022          0.075112           0.001000         5.000000 -85.000000 26.000000 
          descriptors    'mu_s_healthy' 'anfact_healthy'  'mu_a_healthy'    'x_displace' 'y_displace' 'z_displace' 'x_rotate' 'y_rotate' 'z_rotate'
#        discrete_state_range = 1
#          initial_state    0
#          descriptors      'powerhistory:[[19, 28, 46, 78, 119], [0.0, 4.0, 0.0, 9.0, 0.0], 5.0, 78]'

interface,
        fork                                    #1,#4,#5,#7,#8,#11,#16,#19
          file_save file_tag
          analysis_driver = 'python ./brainsearch.py --param_file '
          parameters_file = './workdir/Patient0007/026/opt/optpp_pds.in'
          results_file    = './workdir/Patient0007/026/opt/optpp_pds.out'

# data quality   0

responses,
        objective_functions = 1
        numerical_gradients
        no_hessians
