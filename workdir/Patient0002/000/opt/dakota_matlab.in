
# DAKOTA INPUT FILE - dakota_opt.in
strategy,
        single_method
          graphics,tabular_graphics_data

method,
        #optpp_fd_newton
        optpp_pds
        output verbose
          max_iterations = 1000
          max_function_evaluations = 2000
#         solution_accuracy = 1e-4
#         initial_delta = 0.5
#         threshold_delta = 1e-4
#         exploratory_moves basic_pattern
#         contraction_factor = 0.75

model,
        single

variables,
        continuous_design = 3
          initial_point       21.0    0.9    5.e1   
          lower_bounds        20.0    0.7    5.e1   
          upper_bounds        40.0    1.0    6.e2   
          descriptors       'probe_init' 'anfact_healthy'  'mu_a_healthy' 
        continuous_state = 9
          initial_state    8.e3   0.5   6.0  0.096445 0.119600 0.000000 0.000000 270.000000 345.000000 
          #lower_bounds     1.e3   0.4   3.0  0.095445 0.118600 -0.001000 -5.000000 265.000000 340.000000 
          #upper_bounds     5.e4   0.7   9.0  0.097445 0.120600 0.001000 5.000000 275.000000 350.000000 
          descriptors      'mu_s_healthy' 'k_0_healthy' 'w_0_healthy' 'x_displace' 'y_displace' 'z_displace' 'x_rotate' 'y_rotate' 'z_rotate'
#        discrete_state_range = 1
#          initial_state    0
#          descriptors      'powerhistory:[[19, 28, 46, 78, 119], [0.0, 4.0, 0.0, 9.0, 0.0], 5.0, 78]'

interface,
        fork                                    #1,#4,#5,#7,#8,#11,#16,#19
          file_save file_tag
          analysis_driver = 'matlab -nodisplay -nodesktop -r super_script,quit '
          parameters_file = './optpp_pds.in.mat'
          results_file    = './optpp_pds.out'

# data quality   1

responses,
        objective_functions = 1
        no_gradients
        #numerical_gradients
        no_hessians
